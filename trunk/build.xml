<project name="jDBI" default="jar" basedir=".">

    <property name="debug" value="true"/>
    <property name="version" value="2.0pre10"/>
    <property name="username" value="johan"/>
    <property name="password" value="doe"/>
    <property name="release-url" value="${username}:${password}@beaver.codehaus.org:/home/projects/jdbi/public_html/"/>

    <target name="grammar" description="Build format grammer">
        <mkdir dir="build/grammar/org/skife/jdbi/rewriter/printf/"/>
        <antlr target="src/grammar/printf-rewriter.g" outputdirectory="build/grammar/org/skife/jdbi/rewriter/printf/"/>
        <mkdir dir="build/grammar/org/skife/jdbi/rewriter/colon/"/>
        <antlr target="src/grammar/colon-rewriter.g" outputdirectory="build/grammar/org/skife/jdbi/rewriter/colon/"/>
    </target>

    <target name="compile-stubs" description="Compile stubs required by the compile step">
        <!-- builds the stubs for things we cannot distribute with the build -->
        <mkdir dir="build/stub-classes"/>
        <javac target="5" source="5" destdir="build/stub-classes" debug="${debug}">
            <src location="src/stubs"/>
            <classpath>
                <fileset dir="lib">
                    <include name="**/*.jar"/>
                </fileset>
            </classpath>
        </javac>
    </target>

    <target name="compile" depends="compile-stubs, grammar" description="Compile all Source Files">
        <mkdir dir="build/classes"/>
        <javac target="5" source="5" destdir="build/classes" debug="${debug}">
            <src location="src/java"/>
            <src location="build/grammar"/>
            <classpath>
                <path location="build/stub-classes"/>
                <fileset dir="lib">
                    <include name="**/*.jar"/>
                </fileset>
            </classpath>
        </javac>
    </target>

    <target name="compile-tests" depends="compile" description="Build source for unit tests">
        <mkdir dir="build"/>
        <mkdir dir="build/test-classes"/>
        <javac srcdir="src/test" target="1.5" source="1.5" destdir="build/test-classes" debug="${debug}">
            <classpath>
                <fileset dir="lib">
                    <include name="**/*.jar"/>
                </fileset>
                <pathelement location="build/classes"/>
            </classpath>
        </javac>
        <copy todir="build/test-classes">
            <fileset dir="src/test">
                <include name="**/*.sql"/>
            </fileset>
        </copy>

        <taskdef name="jarjar" classname="com.tonicsystems.jarjar.JarJarTask" classpath="lib/build/jarjar-0.7.jar"/>
        <jarjar jarfile="build/jdbi-tests.jar">
            <fileset dir="src/test">
                <include name="**/*.sql"/>
            </fileset>
            <fileset dir="build/test-classes">
                <include name="**/*.class"/>
            </fileset>
            <rule pattern="antlr.**" result="org.skife.jdbi.antlr.@1"/>
        </jarjar>

    </target>

    <target name="jar" depends="compile" description="Build Jar Library">
        <mkdir dir="build"/>

        <taskdef name="jarjar" classname="com.tonicsystems.jarjar.JarJarTask" classpath="lib/build/jarjar-0.7.jar"/>
        <jarjar jarfile="build/jdbi-${version}.jar">
            <fileset dir="build/classes">
                <include name="**/*.class"/>
            </fileset>
            <fileset dir="build/grammar">
                <include name="**/*TokenTypes.txt"/>
            </fileset>
            <zipfileset src="lib/build/antlr-2.7.7.jar"/>
            <rule pattern="antlr.**" result="org.skife.jdbi.antlr.@1"/>

            <zap pattern="antlr.Tool"/>
            <zap pattern="antlr.*Tool*"/>
            <zap pattern="antlr.Rule*"/>
            <zap pattern="antlr.PrintWriter*"/>
            <zap pattern="antlr.*RewriteEngine*"/>
            <zap pattern="antlr.**CSharp**"/>
            <zap pattern="antlr.CSharp**"/>
            <zap pattern="antlr.DefineGrammarSymbols"/>
            <zap pattern="antlr.MakeGrammar"/>
            <zap pattern="antlr.Diagnostic**"/>
            <zap pattern="antlr.Python**"/>
            <zap pattern="antlr.**Python**"/>
            <zap pattern="antlr.DocBook**"/>
            <zap pattern="antlr.**DocBook**"/>
            <zap pattern="antlr.**HTML**"/>
            <zap pattern="antlr.HTML**"/>
            <zap pattern="antlr.**Cpp**"/>
            <zap pattern="antlr.Cpp**"/>
            <zap pattern="antlr.Tree*"/>
            <zap pattern="antlr.**AST**"/>
            <zap pattern="antlr.AST**"/>
            <zap pattern="antlr.Parse**"/>
            <zap pattern="antlr.**Parse**"/>
            <zap pattern="antlr.**CodeGenerator**"/>
            <zap pattern="antlr.CodeGenerator**"/>
            <zap pattern="antlr.CodeGenerator"/>
            <zap pattern="antlr.ASdebug.**"/>
            <zap pattern="antlr.build.**"/>
            <zap pattern="antlr.debug.**"/>
            <zap pattern="antlr.actions.csharp.**"/>
            <zap pattern="antlr.actions.python.**"/>
            <zap pattern="antlr.actions.cpp.**"/>
            <zap pattern="antlr.preprocessor.**"/>
        </jarjar>

        <echo message="built library: build/jdbi-${version}.jar"/>
    </target>

    <target name="clean" description="Remove All Artifacts">
        <delete quiet="true" dir="build"/>
        <delete quiet="true" dir="report"/>
    </target>

    <target name="test" depends="jar, compile-tests" description="Run all junit tests">
        <mkdir dir="report"/>
        <junit>
            <formatter type="plain"/>
            <classpath>
                <fileset dir="lib/test">
                    <include name="**/*.jar"/>
                </fileset>
                <fileset dir="lib/spring">
                    <include name="**/*.jar"/>
                </fileset>
                <pathelement location="build/jdbi-${version}.jar"/>
                <pathelement location="build/jdbi-tests.jar"/>
            </classpath>
            <batchtest todir="report">
                <fileset dir="src/test">
                    <include name="**/Test*.java"/>
                </fileset>
            </batchtest>
        </junit>
    </target>

    <target name="javadoc" description="Generate API Documentation">
        <javadoc
                destdir="build/doc/api-2.0"
                author="true"
                windowtitle="jDBI"
                access="protected">
            <fileset dir="src/java"/>
        </javadoc>
    </target>

    <target name="release" depends="jar, javadoc">
        <mkdir dir="build/site"/>
        <copy todir="build/site/api-2.0">
            <fileset dir="build/doc/api-2.0"/>
        </copy>
        <copy file="build/jdbi-${version}.jar" todir="build/site/"/>
        <copy file="src/doc/index.html" todir="build/site/">
            <filterset>
                <filter token="version" value="${version}"/>
            </filterset>
        </copy>

        <copy file="RELEASE_NOTES" todir="build/site/"/>

        <mkdir dir="build/staging/jdbi-${version}"/>
        <copy todir="build/staging/jdbi-${version}/src">
            <fileset dir="src">
                <exclude name="**/.svn"/>
            </fileset>
        </copy>
        <copy todir="build/staging/jdbi-${version}/lib">
            <fileset dir="lib">
                <exclude name="**/.svn"/>
            </fileset>
        </copy>

        <copy todir="build/staging/jdbi-${version}">
            <fileset file="CONTRIBUTORS"/>
            <fileset file="build.xml"/>
            <fileset file="LICENSE"/>
            <fileset file="NOTICE"/>
            <fileset file="README"/>
            <fileset file="RELEASE_NOTES"/>
        </copy>
        <tar tarfile="build/site/jdbi-${version}.tar.gz" basedir="build/staging" compression="gzip"/>
        <zip zipfile="build/site/jdbi-${version}.zip" basedir="build/staging"/>
    </target>
</project>


